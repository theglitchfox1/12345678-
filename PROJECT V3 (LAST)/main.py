import telebot
from telebot import types
import sqlite3
from datetime import datetime
import time

bot = telebot.TeleBot('7993865098:AAFGjVty7eEJW8pavSqxjzYXsfuCnlIyt98')

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
conn = sqlite3.connect('user_data.db', check_same_thread=False)
cursor = conn.cursor()

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
cursor.execute('''
CREATE TABLE IF NOT EXISTS users (
    user_id INTEGER PRIMARY KEY,
    first_name TEXT,
    last_name TEXT,
    username TEXT,
    phone TEXT,
    email TEXT,
    latitude REAL,
    longitude REAL,
    registration_date TEXT,
    last_bot_message_id INTEGER
)
''')
conn.commit()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
def delete_messages(chat_id, *message_ids):
    for msg_id in message_ids:
        try:
            bot.delete_message(chat_id, msg_id)
            time.sleep(0.3)  # –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π API
        except Exception as e:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ {msg_id}: {e}")

@bot.message_handler(commands=['start'])
def start(message):
    # –£–¥–∞–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É /start
    try:
        bot.delete_message(message.chat.id, message.message_id)
    except:
        pass
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ –±–∞–∑–µ
    cursor.execute('SELECT phone FROM users WHERE user_id = ?', (message.from_user.id,))
    result = cursor.fetchone()
    
    if result and result[0]:  # –ï—Å–ª–∏ –Ω–æ–º–µ—Ä —É–∂–µ –µ—Å—Ç—å
        msg = bot.send_message(message.chat.id, "–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!")
        ask_location(message)
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞
        cursor.execute('UPDATE users SET last_bot_message_id = ? WHERE user_id = ?', 
                      (msg.message_id, message.from_user.id))
        conn.commit()
    else:
        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–æ–Ω—Ç–∞–∫—Ç
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        markup.add(types.KeyboardButton("üì± –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º", request_contact=True))
        
        msg = bot.send_message(
            message.chat.id,
            "üëã –î–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º.\n\n"
            "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ ‚¨áÔ∏è",
            reply_markup=markup
        )
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞
        cursor.execute('INSERT OR REPLACE INTO users (user_id, last_bot_message_id) VALUES (?, ?)',
                      (message.from_user.id, msg.message_id))
        conn.commit()

@bot.message_handler(content_types=['contact'])
def handle_contact(message):
    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–Ω—Ç–∞–∫—Ç–æ–º
    try:
        bot.delete_message(message.chat.id, message.message_id)
    except:
        pass
    
    if message.contact.user_id == message.from_user.id:
        # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞
        cursor.execute('SELECT last_bot_message_id FROM users WHERE user_id = ?', (message.from_user.id,))
        last_bot_msg_id = cursor.fetchone()[0]
        if last_bot_msg_id:
            try:
                bot.delete_message(message.chat.id, last_bot_msg_id)
            except:
                pass
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        user = message.from_user
        cursor.execute('''
        INSERT OR REPLACE INTO users 
        (user_id, first_name, last_name, username, phone, registration_date)
        VALUES (?, ?, ?, ?, ?, ?)
        ''', (
            user.id,
            user.first_name,
            user.last_name,
            user.username,
            message.contact.phone_number,
            datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        ))
        conn.commit()
        
        msg = bot.send_message(
            message.chat.id,
            "‚úÖ –ö–æ–Ω—Ç–∞–∫—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω!",
            reply_markup=types.ReplyKeyboardRemove()
        )
        # –û–±–Ω–æ–≤–ª—è–µ–º ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞
        cursor.execute('UPDATE users SET last_bot_message_id = ? WHERE user_id = ?',
                      (msg.message_id, message.from_user.id))
        conn.commit()
        
        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –≥–µ–æ–ø–æ–∑–∏—Ü–∏—é
        ask_location(message)
    else:
        msg = bot.send_message(message.chat.id, "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –°–í–û–ò–ú –∫–æ–Ω—Ç–∞–∫—Ç–æ–º.")
        cursor.execute('UPDATE users SET last_bot_message_id = ? WHERE user_id = ?',
                      (msg.message_id, message.from_user.id))
        conn.commit()

def ask_location(message):
    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞
    cursor.execute('SELECT last_bot_message_id FROM users WHERE user_id = ?', (message.from_user.id,))
    last_bot_msg_id = cursor.fetchone()[0]
    if last_bot_msg_id:
        try:
            bot.delete_message(message.chat.id, last_bot_msg_id)
        except:
            pass
    
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add(types.KeyboardButton("üìç –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ–º", request_location=True))
    
    msg = bot.send_message(
        message.chat.id,
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –≤–∞—à–∏–º –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ–º:",
        reply_markup=markup
    )
    cursor.execute('UPDATE users SET last_bot_message_id = ? WHERE user_id = ?',
                  (msg.message_id, message.from_user.id))
    conn.commit()

@bot.message_handler(content_types=['location'])
def handle_location(message):
    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ª–æ–∫–∞—Ü–∏–µ–π
    try:
        bot.delete_message(message.chat.id, message.message_id)
    except:
        pass
    
    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞
    cursor.execute('SELECT last_bot_message_id FROM users WHERE user_id = ?', (message.from_user.id,))
    last_bot_msg_id = cursor.fetchone()[0]
    if last_bot_msg_id:
        try:
            bot.delete_message(message.chat.id, last_bot_msg_id)
        except:
            pass
    
    if message.location:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
        cursor.execute('''
        UPDATE users 
        SET latitude = ?, longitude = ?
        WHERE user_id = ?
        ''', (
            message.location.latitude,
            message.location.longitude,
            message.from_user.id
        ))
        conn.commit()
        
        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º email
        ask_email(message)
    else:
        msg = bot.send_message(message.chat.id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≤–∞—à–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ.")
        cursor.execute('UPDATE users SET last_bot_message_id = ? WHERE user_id = ?',
                      (msg.message_id, message.from_user.id))
        conn.commit()

def ask_email(message):
    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞
    cursor.execute('SELECT last_bot_message_id FROM users WHERE user_id = ?', (message.from_user.id,))
    last_bot_msg_id = cursor.fetchone()[0]
    if last_bot_msg_id:
        try:
            bot.delete_message(message.chat.id, last_bot_msg_id)
        except:
            pass
    
    msg = bot.send_message(
        message.chat.id,
        "üìß –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à email:",
        reply_markup=types.ForceReply(selective=True)
    )
    cursor.execute('UPDATE users SET last_bot_message_id = ? WHERE user_id = ?',
                  (msg.message_id, message.from_user.id))
    conn.commit()
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ email
    bot.register_next_step_handler(msg, process_email)

def process_email(message):
    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å email
    try:
        bot.delete_message(message.chat.id, message.message_id)
    except:
        pass
    
    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞
    cursor.execute('SELECT last_bot_message_id FROM users WHERE user_id = ?', (message.from_user.id,))
    last_bot_msg_id = cursor.fetchone()[0]
    if last_bot_msg_id:
        try:
            bot.delete_message(message.chat.id, last_bot_msg_id)
        except:
            pass
    
    email = message.text.strip()
    
    # –ü—Ä–æ—Å—Ç–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è email
    if '@' in email and '.' in email:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º email
        cursor.execute('''
        UPDATE users 
        SET email = ?
        WHERE user_id = ?
        ''', (email, message.from_user.id))
        conn.commit()
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        msg = bot.send_message(
            message.chat.id,
            "–í—Å–µ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.\n\n"
            "–í—ã –ø—Ä–æ—à–ª–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é!",
            reply_markup=types.ReplyKeyboardRemove()
        )
        
        # –£–¥–∞–ª—è–µ–º —á–∞—Ç —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        time.sleep(0)
        delete_chat(message.chat.id)
    else:
        msg = bot.send_message(
            message.chat.id,
            "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email:",
            reply_markup=types.ForceReply(selective=True)
        )
        cursor.execute('UPDATE users SET last_bot_message_id = ? WHERE user_id = ?',
                      (msg.message_id, message.from_user.id))
        conn.commit()
        bot.register_next_step_handler(msg, process_email)  # –ü–æ–≤—Ç–æ—Ä–Ω–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º email

def delete_chat(chat_id):
    try:
        # –ü—ã—Ç–∞–µ–º—Å—è —É–¥–∞–ª–∏—Ç—å –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        for i in range(1, 100):
            try:
                bot.delete_message(chat_id, i)
                time.sleep(0.3)
            except:
                continue
        
        # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–∫–∏–Ω—É—Ç—å —á–∞—Ç
        bot.leave_chat(chat_id)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —á–∞—Ç–∞: {e}")

bot.polling()